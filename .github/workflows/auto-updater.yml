name: Automatic Data Update

on:
  schedule:
    - cron: '0 2 * * *'

jobs:
  DataUpdater:
    name: Automatic Data Update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Use Node.js v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Restore CI Cache
        uses: actions/cache@v2.1.6
        id: cache-restore
        with:
          path: node_modules
          key: ${{ runner.os }}-16-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies if Cache Miss
        if: ${{ !steps.cache-restore.outputs.cache-hit }}
        run: yarn --immutable
      - name: Run Smogon Tiers updater
        run: yarn au:tiers
      - name: Run Learnsets updater
        run: yarn au:learnsets
      - name: Run prettier on the code
        run: yarn format
      - name: Install GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          curl -sL \
              $(curl -sL \
                  -H "Authorization: bearer ${GITHUB_TOKEN}" \
                  -X POST \
                  --data '{"query":"query { repository(owner: \"cli\", name: \"cli\") { releases(last: 1) { nodes { releaseAssets(first: 20) { nodes { downloadUrl name }}}}}}"}' "https://api.github.com/graphql" |
                  jq -cr '.data.repository.releases.nodes[0].releaseAssets.nodes[]? | select(.name | contains("linux_amd64.tar.gz")).downloadUrl') |
              tar -xz --wildcards "*gh" && mv gh*linux_amd64/bin/gh . && rm -r gh_*linux_amd64
      - name: Commit any changes and create a pull request
        env:
          GITHUB_USER: Favware-bot
          GITHUB_EMAIL: favwarebot@gmail.com
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          git add .;
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit, exiting with code 0"
            exit 0;
          else
            git remote set-url origin "https://${GITHUB_TOKEN}:x-oauth-basic@github.com/${GITHUB_REPOSITORY}.git";
            git config --local user.email "${GITHUB_EMAIL}";
            git config --local user.name "${GITHUB_USER}";
            git checkout -b favware-bot/update-data/$(date +%F-%H-%M);
            git commit -sam "refactor: update data [skip publish]";
            git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)
            ./gh pr create -t "refactor: update data [skip publish]" -b "*bleep bloop* I updated the data files" -l "Meta: Data Update" -B main;
          fi
