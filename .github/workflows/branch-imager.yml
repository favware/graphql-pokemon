name: Branch Imager

on:
  push:
    branches-ignore:
      - master

jobs:
  Build:
    name: Compiling TypeScript
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Restore CI Cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-12-${{ hashFiles('**/yarn.lock') }}
      - name: Install NodeJS Dependencies
        run: yarn
      - name: Compile TypeScript
        uses: icrawl/action-tsc@v1
        with:
          build: src
      - name: Upload API bundle to artifacts
        uses: actions/upload-artifact@v2-preview
        with:
          name: api_bundle
          path: generated/api/

  Dockerhub:
    name: Publish image to Dockerhub
    runs-on: ubuntu-latest
    if: "!(contains(github.event.head_commit.message, '[skip ci]') ||contains(github.event.head_commit.message, '[skip docker]'))"
    needs: Build
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Download build bundle artifact
        uses: actions/download-artifact@v2-preview
        with:
          name: api_bundle
          path: generated/api/
      - name: Get GitHub Branch Name
        run: echo ::set-env name=GITHUB_BRANCH_NAME::$(echo ${{ github.ref }} | cut -c12- | sed -e 's/\/\|_/-/g')
      - name: Publish to Dockerhub
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: favware/graphql-pokemon
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "${{ env.GITHUB_BRANCH_NAME }}"

  Github-Package-Registry-Docker:
    name: Publish image to Github Package Registry
    runs-on: ubuntu-latest
    if: "!(contains(github.event.head_commit.message, '[skip ci]') ||contains(github.event.head_commit.message, '[skip docker]'))"
    needs: Build
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Download build bundle artifact
        uses: actions/download-artifact@v2-preview
        with:
          name: api_bundle
          path: generated/api/
      - name: Get GitHub Branch Name
        run: echo ::set-env name=GITHUB_BRANCH_NAME::$(echo ${{ github.ref }} | cut -c12- | sed -e 's/\/\|_/-/g')
      - name: Publish to Github Package Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: favware/graphql-pokemon/graphql-pokemon
          username: Favware-bot
          password: ${{ secrets.BOT_TOKEN }}
          tags: "${{ env.GITHUB_BRANCH_NAME }}"
          registry: docker.pkg.github.com