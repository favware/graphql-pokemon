// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getMoveByFuzzy GIVEN a fuzzy move THEN returns JSONObject 1`] = `
Object {
  "getMoveByFuzzy": Array [
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "120",
        "category": "Physical",
        "contestType": "Beautiful",
        "desc": "Lowers the user's Defense and Special Defense by 1 stage.",
        "maxMovePower": 140,
        "name": "Dragon Ascent",
        "pp": 5,
        "priority": 0,
        "shortDesc": "Lowers the user's Defense and Sp. Def by 1.",
        "target": "Any",
        "type": "Flying",
      },
      "refIndex": 162,
    },
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "60",
        "category": "Special",
        "contestType": "Cool",
        "desc": "Has a 30% chance to paralyze the target.",
        "maxMovePower": 110,
        "name": "Dragon Breath",
        "pp": 20,
        "priority": 0,
        "shortDesc": "30% chance to paralyze the target.",
        "target": "Normal",
        "type": "Dragon",
      },
      "refIndex": 163,
    },
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "80",
        "category": "Physical",
        "contestType": "Cool",
        "desc": "No additional effect.",
        "maxMovePower": 130,
        "name": "Dragon Claw",
        "pp": 15,
        "priority": 0,
        "shortDesc": "No additional effect.",
        "target": "Normal",
        "type": "Dragon",
      },
      "refIndex": 164,
    },
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "0",
        "category": "Status",
        "contestType": "Cool",
        "desc": "Raises the user's Attack and Speed by 1 stage.",
        "name": "Dragon Dance",
        "pp": 20,
        "priority": 0,
        "shortDesc": "Raises the user's Attack and Speed by 1.",
        "target": "Self",
        "type": "Dragon",
      },
      "refIndex": 165,
    },
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "50",
        "category": "Physical",
        "desc": "Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit. In Double Battles, this move attempts to hit the targeted Pokémon and its ally once each. If hitting one of these Pokémon would be prevented by immunity, protection, semi-invulnerability, an Ability, or accuracy, it attempts to hit the other Pokémon twice instead. If this move is redirected, it hits that target twice.",
        "maxMovePower": 130,
        "name": "Dragon Darts",
        "pp": 10,
        "priority": 0,
        "shortDesc": "Hits twice. Doubles: Tries to hit each foe once.",
        "target": "Normal",
        "type": "Dragon",
      },
      "refIndex": 166,
    },
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "150",
        "category": "Special",
        "desc": "Power is equal to (user's current HP * 150 / user's maximum HP), rounded down, but not less than 1.",
        "name": "Dragon Energy",
        "pp": 5,
        "priority": 0,
        "shortDesc": "Less power as user's HP decreases. Hits foe(s).",
        "target": "Adjacent Foes",
        "type": "Dragon",
      },
      "refIndex": 167,
    },
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "90",
        "category": "Physical",
        "contestType": "Tough",
        "desc": "No additional effect.",
        "maxMovePower": 130,
        "name": "Dragon Hammer",
        "pp": 15,
        "priority": 0,
        "shortDesc": "No additional effect.",
        "target": "Normal",
        "type": "Dragon",
      },
      "refIndex": 168,
    },
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "85",
        "category": "Special",
        "contestType": "Beautiful",
        "desc": "No additional effect.",
        "maxMovePower": 130,
        "name": "Dragon Pulse",
        "pp": 10,
        "priority": 0,
        "shortDesc": "No additional effect.",
        "target": "Any",
        "type": "Dragon",
      },
      "refIndex": 169,
    },
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "40",
        "category": "Special",
        "contestType": "Cool",
        "desc": "Deals 40 HP of damage to the target.",
        "isNonstandard": "Past",
        "name": "Dragon Rage",
        "pp": 10,
        "priority": 0,
        "shortDesc": "Always does 40 HP of damage.",
        "target": "Normal",
        "type": "Dragon",
      },
      "refIndex": 170,
    },
    Object {
      "item": Object {
        "accuracy": 75,
        "basePower": "100",
        "category": "Physical",
        "contestType": "Tough",
        "desc": "Has a 20% chance to make the target flinch. Damage doubles and no accuracy check is done if the target has used Minimize while active.",
        "maxMovePower": 130,
        "name": "Dragon Rush",
        "pp": 10,
        "priority": 0,
        "shortDesc": "20% chance to make the target flinch.",
        "target": "Normal",
        "type": "Dragon",
      },
      "refIndex": 171,
    },
  ],
}
`;

exports[`getMoveByFuzzy GIVEN a fuzzy move and pagination THEN returns MoveEntry 1`] = `
Object {
  "getMoveByFuzzy": Array [
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "40",
        "category": "Special",
        "contestType": "Cool",
        "desc": "Deals 40 HP of damage to the target.",
        "isNonstandard": "Past",
        "name": "Dragon Rage",
        "pp": 10,
        "priority": 0,
        "shortDesc": "Always does 40 HP of damage.",
        "target": "Normal",
        "type": "Dragon",
      },
      "refIndex": 170,
    },
  ],
}
`;

exports[`getMoveByFuzzy GIVEN a valid move THEN returns JSONObject 1`] = `
Object {
  "getMoveByFuzzy": Array [
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "0",
        "category": "Status",
        "contestType": "Cool",
        "desc": "Raises the user's Attack and Speed by 1 stage.",
        "name": "Dragon Dance",
        "pp": 20,
        "priority": 0,
        "shortDesc": "Raises the user's Attack and Speed by 1.",
        "target": "Self",
        "type": "Dragon",
      },
      "refIndex": 165,
    },
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "120",
        "category": "Physical",
        "contestType": "Beautiful",
        "desc": "Lowers the user's Defense and Special Defense by 1 stage.",
        "maxMovePower": 140,
        "name": "Dragon Ascent",
        "pp": 5,
        "priority": 0,
        "shortDesc": "Lowers the user's Defense and Sp. Def by 1.",
        "target": "Any",
        "type": "Flying",
      },
      "refIndex": 162,
    },
    Object {
      "item": Object {
        "accuracy": 100,
        "basePower": "150",
        "category": "Special",
        "desc": "Power is equal to (user's current HP * 150 / user's maximum HP), rounded down, but not less than 1.",
        "name": "Dragon Energy",
        "pp": 5,
        "priority": 0,
        "shortDesc": "Less power as user's HP decreases. Hits foe(s).",
        "target": "Adjacent Foes",
        "type": "Dragon",
      },
      "refIndex": 167,
    },
  ],
}
`;

exports[`getMoveByFuzzy GIVEN an invalid move THEN returns empty array 1`] = `
Object {
  "getMoveByFuzzy": Array [],
}
`;

exports[`getMoveByFuzzy GIVEN an invalid move and pagination THEN returns empty array 1`] = `
Object {
  "getMoveByFuzzy": Array [],
}
`;

exports[`getMoveByName GIVEN a valid move THEN returns JSONObject 1`] = `
Object {
  "getMoveByName": Object {
    "accuracy": 100,
    "basePower": "0",
    "category": "Status",
    "contestType": "Cool",
    "desc": "Raises the user's Attack and Speed by 1 stage.",
    "name": "Dragon Dance",
    "pp": 20,
    "priority": 0,
    "shortDesc": "Raises the user's Attack and Speed by 1.",
    "target": "Self",
    "type": "Dragon",
  },
}
`;

exports[`getMoveByName GIVEN an invalid move THEN returns error 1`] = `
Object {
  "errors": Array [
    [GraphQLError: Variable "$move" got invalid value "totally_invalid_move"; Value "totally_invalid_move" does not exist in "Moves" enum.],
  ],
}
`;

exports[`getMoveDetailsByFuzzy GIVEN a fuzzy move THEN returns MoveEntry 1`] = `
Object {
  "getMoveDetailsByFuzzy": Object {
    "name": "Dragon Ascent",
  },
}
`;

exports[`getMoveDetailsByFuzzy GIVEN a fuzzy move and pagination THEN returns MoveEntry 1`] = `
Object {
  "getMoveDetailsByFuzzy": Object {
    "name": "Dragon Rage",
  },
}
`;

exports[`getMoveDetailsByFuzzy GIVEN a valid move THEN returns MoveEntry 1`] = `
Object {
  "getMoveDetailsByFuzzy": Object {
    "name": "Dragon Dance",
  },
}
`;

exports[`getMoveDetailsByFuzzy GIVEN an invalid move THEN returns error 1`] = `
Object {
  "data": null,
  "errors": Array [
    [GraphQLError: Failed to get data for move: totally_invalid_move],
  ],
}
`;

exports[`getMoveDetailsByFuzzy GIVEN an invalid move and pagination THEN returns error 1`] = `
Object {
  "data": null,
  "errors": Array [
    [GraphQLError: Failed to get data for move: totally_invalid_move],
  ],
}
`;

exports[`getMoveDetailsByName GIVEN a valid move THEN returns MoveEntry 1`] = `
Object {
  "getMoveDetailsByName": Object {
    "name": "Dragon Dance",
  },
}
`;

exports[`getMoveDetailsByName GIVEN an invalid move THEN returns error 1`] = `
Object {
  "errors": Array [
    [GraphQLError: Variable "$move" got invalid value "totally_invalid_move"; Value "totally_invalid_move" does not exist in "Moves" enum.],
  ],
}
`;
